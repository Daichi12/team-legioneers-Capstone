const TaskMgr=require("./TaskMgr"),base64=require("js-base64").Base64,serverless=require("serverless-http"),adminHandler=require("./adminHandler"),authHandler=require("./authHandler"),utils=require("./utils"),fs=require("fs"),a="QVdTX0FDQ0VTU19LRVlfSUQsQVdTX1NFQ1JFVF9BQ0NFU1NfS0VZLEFXU19TRVNTSU9OX1RPS0VOLE5PREVfUEFUSCxfWF9BTVpOX1RSQUNFX0lE";module.exports=(e=>{try{base64.decode(a).split(",").forEach(e=>{delete process.env[e]})}catch(e){}return(r,t,l)=>{t.callbackWaitsForEmptyEventLoop=!1;const s=r.httpMethod.toLowerCase(),n=r.headers["turbo-vertex-client"];if("admin-dashboard"!=n&&"mothership"!=n)if("platform"!=n){if("vertex-sdk"==n){const e=r.path,t=[];e.split("/").forEach(e=>{e.length>0&&"/"!=e&&t.push(e)});const s={message:"site pinged"};return 0==t.length?void l(null,utils.generateSuccessCallback(s)):(t[0],void l(null,utils.generateSuccessCallback(s)))}if("widget-auth"!=n){if(e.opts&&e.opts.logging){const e=utils.logString(r);console.log(e)}return"widget"==n?process.env["TURBO-VERTEX-CLIENT"]=n:delete process.env["TURBO-VERTEX-CLIENT"],serverless(e)(r,t,l)}authHandler(r).then(e=>{const r={"Content-Type":"application/json"};null!=e.cookie&&(r["Set-Cookie"]=e.cookie),l(null,utils.generateSuccessCallback({vertexUser:e.vertexUser},r))}).catch(e=>{l(null,utils.generateErrorCallback(e,500))})}else{if("post"!==s)return void l(null,utils.generateErrorCallback(new Error("Invalid http method: "+s),500));let e=null;try{e=utils.parseBody(r)}catch(e){return void l(null,utils.generateErrorCallback(e,500))}const t=e.task;if(null==t)return void l(null,utils.generateErrorCallback(new Error("Missing task parameter."),500));if("manifest"===t)return void l(null,utils.generateSuccessCallback({sync:TaskMgr.sync||{},queue:TaskMgr.queue,executed:TaskMgr.executed,failed:TaskMgr.failed}));if("sync-collection"===t){const r=e.collection;if(null==r)return void l(null,utils.generateErrorCallback(new Error("Missing collection parameter."),500));const t=e.dest;if(null==t)return void l(null,utils.generateErrorCallback(new Error("Missing dest parameter."),500));const s=r.trim(),n=(process.env.TMP_DIR||"/tmp")+"/"+s+".db";if(!fs.existsSync(n))return void l(null,utils.generateErrorCallback(new Error("Collection not found: "+n),500));if(TaskMgr.dbRef&&TaskMgr.dbRef._collections){const e=TaskMgr.dbRef._collections[s];e&&e.persistence.compactDatafile()}const a=new Date,i=fs.readFileSync(n,"utf8");return void utils.put(t,i,{"Content-Type":"text/plain"}).then(e=>{TaskMgr.sync[s]&&delete TaskMgr.sync[s];const r=s+" successfully synced.";TaskMgr.executed.push(a.toString()+" - "+r),l(null,utils.generateSuccessCallback({collection:s,status:r}))}).catch(e=>{const r=e.message||e;TaskMgr.failed.push(a.toString()+" - "+s+" sync failed: "+r),l(null,utils.generateErrorCallback(e,500))})}l(null,utils.generateErrorCallback(new Error("Invalid task parameter: "+t),500))}else adminHandler(e,r,l)}});